/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Chat;

import static Chat.client_chat.dout;
import static Chat.client_chat.ss;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.ServerSocket;
import java.net.Socket;

/**
 *
 * @author Prageeth
 */
public class server_chat extends javax.swing.JFrame {
    
    static ServerSocket ss;
    static Socket s;
    static DataInputStream dis;
    static DataOutputStream dout;

    /**
     * Creates new form server_chat
     */
    public server_chat() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        msg_area = new javax.swing.JTextArea();
        txt_area = new javax.swing.JTextField();
        send_btn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(0, 0, 0));
        setForeground(new java.awt.Color(0, 0, 0));
        setResizable(false);

        msg_area.setEditable(false);
        msg_area.setBackground(new java.awt.Color(153, 255, 255));
        msg_area.setColumns(20);
        msg_area.setRows(5);
        msg_area.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportView(msg_area);

        txt_area.setToolTipText("Enter your Message");
        txt_area.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 5));
        txt_area.setMargin(new java.awt.Insets(2, 5, 2, 2));
        txt_area.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_areaActionPerformed(evt);
            }
        });

        send_btn.setBackground(new java.awt.Color(102, 255, 102));
        send_btn.setFont(new java.awt.Font("Lato", 1, 18)); // NOI18N
        send_btn.setText("Send");
        send_btn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        send_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                send_btnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel1.setText("... Server ... ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_area, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(send_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(55, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_area, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(send_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_areaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_areaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_areaActionPerformed

    private void send_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_send_btnActionPerformed
        // TODO add your handling code here:
        
        //to view my message
            try {
            String txt = "";
            txt = txt_area.getText();
            dout.writeUTF(txt);
            txt_area.setText("");
            msg_area.setText(msg_area.getText() + "\n \t\t Server : " + txt);
            
        } catch (Exception e) {
            //Handle Exception
        }
        
    }//GEN-LAST:event_send_btnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(server_chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(server_chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(server_chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(server_chat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new server_chat().setVisible(true);
            }
        });
        
         try {
            String msg = "";
            ss = new ServerSocket(1201);
            s = ss.accept();
            dis = new DataInputStream(s.getInputStream());
            dout = new DataOutputStream(s.getOutputStream());

            while (!msg.equals("exit")) {
                
                msg = dis.readUTF();
                
                String Newstr=" "; 
                String Newdcrypt=" "; 

                // encrypt the message
                    try {        

                       for (int i=0;i<msg.length();i++)  
                       {  

                         char ch=Character.toLowerCase(msg.charAt(i));

                            switch (ch)  
                            {  
                                case 'a':  
                                    Newstr=Newstr+"1";  
                                    break;  
                                case 'b':  
                                    Newstr=Newstr+"2";  
                                    break;  
                                case 'c':  
                                    Newstr=Newstr+"3";  
                                    break;  
                                case 'd':  
                                    Newstr=Newstr+"4";  
                                    break;  
                                case 'e':  
                                    Newstr=Newstr+"5";  
                                    break;  
                                case 'f':  
                                    Newstr=Newstr+"6";  
                                    break;  
                                case 'g':  
                                    Newstr=Newstr+"7";  
                                    break;  
                                case 'h':  
                                    Newstr=Newstr+"8";  
                                    break;  
                                case 'i':  
                                    Newstr=Newstr+"9";  
                                    break;  
                                case 'j':  
                                    Newstr=Newstr+"!";  
                                    break;  
                                case 'k':  
                                    Newstr=Newstr+"@";  
                                    break;  
                                case 'l':  
                                    Newstr=Newstr+"#";  
                                    break;  
                                case 'm':  
                                    Newstr=Newstr+"$";  
                                    break;  
                                case 'n':  
                                    Newstr=Newstr+"%";  
                                    break;  
                                case 'o':  
                                    Newstr=Newstr+"^";  
                                    break;  
                                case 'p':  
                                    Newstr=Newstr+"&";  
                                    break;  
                                case 'q':  
                                    Newstr=Newstr+"*";  
                                    break;  
                                case 'r':  
                                    Newstr=Newstr+"(";  
                                    break;  
                                case 's' :  
                                    Newstr=Newstr+")";  
                                    break;  
                                case 't':  
                                    Newstr=Newstr+"-";  
                                    break;  
                                case 'u':  
                                    Newstr=Newstr+"_";  
                                    break;  
                                case 'v' :  
                                    Newstr=Newstr+"+";  
                                    break;  
                                case 'w':  
                                    Newstr=Newstr+"=";  
                                    break;  
                                case 'x' :  
                                    Newstr=Newstr+"{";  
                                    break;  
                                case 'y':  
                                    Newstr=Newstr+"[";  
                                    break;  
                                case 'z' :  
                                    Newstr=Newstr+"}";  
                                    break;                              
                                case '1':  
                                    Newstr=Newstr+"~";  
                                    break;  
                                case '2':  
                                    Newstr=Newstr+"]";  
                                    break;  
                                case '3':  
                                    Newstr=Newstr+"|";  
                                    break;  
                                case '4':  
                                    Newstr = Newstr+"<";  
                                    break;  
                                case '5':  
                                    Newstr = Newstr+":";  
                                    break;  
                                case '6':  
                                    Newstr = Newstr+";";  
                                    break;  
                                case '7':  
                                    Newstr = Newstr+",";  
                                    break;  
                                case '8' :  
                                    Newstr= Newstr+">";  
                                    break;  
                                case '9':  
                                    Newstr = Newstr+".";  
                                    break;  
                                case '0':  
                                    Newstr = Newstr+"?";  
                                    break;  
                                 default:  
                                    Newstr=Newstr+" ";  
                                    break;  
                                }                            

                       }
                       
                        
                       String NewEcrypt = Newstr;
 
                       //decrypt the message which is encrypted
                       
                       for (int i=0;i<NewEcrypt.length();i++)  
                       {  

                         char chd=Character.toLowerCase(NewEcrypt.charAt(i));

                            switch (chd)  
                            {  
                                case '1':  
                                    Newdcrypt=Newdcrypt+"a";  
                                    break;  
                                case '2':  
                                    Newdcrypt=Newdcrypt+"b";  
                                    break;  
                                case '3':  
                                    Newdcrypt=Newdcrypt+"c";  
                                    break;  
                                case '4':  
                                    Newdcrypt=Newdcrypt+"d";  
                                    break;  
                                case '5':  
                                    Newdcrypt=Newdcrypt+"e";  
                                    break;  
                                case '6':  
                                    Newdcrypt=Newdcrypt+"f";  
                                    break;  
                                case '7':  
                                    Newdcrypt=Newdcrypt+"g";  
                                    break;  
                                case '8':  
                                    Newdcrypt=Newdcrypt+"h";  
                                    break;  
                                case '9':  
                                    Newdcrypt=Newdcrypt+"i";  
                                    break;  
                                case '!':  
                                    Newdcrypt=Newdcrypt+"j";  
                                    break;  
                                case '@':  
                                    Newdcrypt=Newdcrypt+"k";  
                                    break;  
                                case '#':  
                                    Newdcrypt=Newdcrypt+"l";  
                                    break;  
                                case '$':  
                                    Newdcrypt=Newdcrypt+"m";  
                                    break;  
                                case '%':  
                                    Newdcrypt=Newdcrypt+"n";  
                                    break;  
                                case '^':  
                                    Newdcrypt=Newdcrypt+"o";  
                                    break;  
                                case '&':  
                                    Newdcrypt=Newdcrypt+"p";  
                                    break;  
                                case '*':  
                                    Newdcrypt=Newdcrypt+"q";  
                                    break;  
                                case '(':  
                                    Newdcrypt=Newdcrypt+"r";  
                                    break;  
                                case ')' :  
                                    Newdcrypt=Newdcrypt+"s";  
                                    break;  
                                case '-':  
                                    Newdcrypt=Newdcrypt+"t";  
                                    break;  
                                case '_':  
                                    Newdcrypt=Newdcrypt+"u";  
                                    break;  
                                case '+' :  
                                    Newdcrypt=Newdcrypt+"v";  
                                    break;  
                                case '=':  
                                    Newdcrypt=Newdcrypt+"w";  
                                    break;  
                                case '{' :  
                                    Newdcrypt=Newdcrypt+"x";  
                                    break;  
                                case '[':  
                                    Newdcrypt=Newdcrypt+"y";  
                                    break;  
                                case '}' :  
                                    Newdcrypt=Newdcrypt+"z";  
                                    break;                              
                                case '~':  
                                    Newdcrypt=Newdcrypt+"1";  
                                    break;  
                                case ']':  
                                    Newdcrypt=Newdcrypt+"2";  
                                    break;  
                                case '|':  
                                    Newdcrypt=Newdcrypt+"3";  
                                    break;  
                                case '<':  
                                    Newdcrypt = Newdcrypt+"4";  
                                    break;  
                                case ':':  
                                    Newdcrypt = Newdcrypt+"5";  
                                    break;  
                                case ';':  
                                    Newdcrypt = Newdcrypt+"6";  
                                    break;  
                                case ',':  
                                    Newdcrypt = Newdcrypt+"7";  
                                    break;  
                                case '>' :  
                                    Newdcrypt= Newdcrypt+"8";  
                                    break;  
                                case '.':  
                                    Newdcrypt = Newdcrypt+"9";  
                                    break;  
                                case '?':  
                                    Newdcrypt = Newdcrypt+"0";  
                                    break;  
                                 default:  
                                    Newdcrypt=Newdcrypt+" ";  
                                    break;  
                                }  
                            }
                       
                       // print the message in jtextarea
                        msg_area.setText(msg_area.getText() + "\n Client :" + Newdcrypt);

                      
                    }  
                    //catch the exception
                    catch(Exception ioe)  
                    {  
                       ioe.printStackTrace();  
                    }
                                    
                }
            }
         
        catch(Exception e)
        {
            //Exception Handling
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextArea msg_area;
    private javax.swing.JButton send_btn;
    private javax.swing.JTextField txt_area;
    // End of variables declaration//GEN-END:variables
}
